{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAcpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAtBPL,EAAKa,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACN,IAAMC,EAAahB,EAAKE,cAAc,kBAChCe,EAAYjB,EAAKE,cAAc,iBAC/BgB,EAAclB,EAAKE,cAAc,oBAsBzC,SAAwBiB,EAAYC,EAAMC,GAGxC,IAFA,IAAIC,EAAeH,EAEVI,EAAI,EAAGA,GAAKF,EAAQE,IAC3BpB,EAAcoB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAEvEyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGvEiB,GAAgBF,C,CA5BlBY,CAJmBC,SAASjB,EAAWkB,OAC1BD,SAAShB,EAAUiB,OACjBD,SAASf,EAAYgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const delayInput = form.querySelector('[name=\"delay\"]');\n  const stepInput = form.querySelector('[name=\"step\"]');\n  const amountInput = form.querySelector('[name=\"amount\"]');\n  \n  const firstDelay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n  \n  createPromises(firstDelay, step, amount);\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(firstDelay, step, amount) {\n  let currentDelay = firstDelay;\n  \n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    currentDelay += step;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","firstDelay","step","amount","currentDelay","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$createPromises","parseInt","value"],"version":3,"file":"03-promises.3859bbb6.js.map"}